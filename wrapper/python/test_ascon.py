#!/usr/bin/python3

import ascon
import numpy as np


def test_hash_kat():
    '''
    This test case asserts Ascon Hash digests computed by my implementation
    against Known Answer Tests generated by 
    https://github.com/meichlseder/pyascon/blob/236aadd9e09f40bc57064eba7cbade6f46a4c532/genkat.py
    '''

    count = 0  # -many KATs to be run

    with open('LWC_HASH_KAT_256.txt', 'r') as fd:
        while True:
            cnt = fd.readline()
            if not cnt:
                # no more KATs remaining
                break

            msg = fd.readline()
            md = fd.readline()

            # extract out required fields
            cnt = int([i.strip() for i in cnt.split('=')][-1])
            msg = [i.strip() for i in msg.split('=')][-1]
            md = [i.strip() for i in md.split('=')][-1]

            # convert input message to numpy ndarray of uint8_t
            msg = np.asarray([int(f'0x{msg[(i << 1): ((i+1) << 1)]}', base=16)
                              for i in range(len(msg) >> 1)], dtype=np.uint8)

            # convert output digest to numpy ndarray of uint8_t
            md = np.asarray([int(f'0x{md[(i << 1): ((i+1) << 1)]}', base=16)
                             for i in range(len(md) >> 1)], dtype=np.uint8)

            # compute Ascon Hash using my implementation
            digest = ascon.hash(msg)
            # check 32 -bytes element-wise
            check = (md == digest).all()

            assert check, f'[Ascon Hash KAT {cnt}] expected {md}, found {digest} !'

            # don't need this line, so discard
            fd.readline()
            # to keep track of how many KATs executed !
            count = cnt

    print(f'[test] passed {count} -many Ascon Hash KAT(s)')


def test_hashA_kat():
    '''
    This test case asserts Ascon HashA digests computed by my implementation
    against Known Answer Tests generated by 
    https://github.com/meichlseder/pyascon/blob/236aadd9e09f40bc57064eba7cbade6f46a4c532/genkat.py
    '''

    count = 0  # -many KATs to be run

    with open('LWC_HASH_KAT_256.txt', 'r') as fd:
        while True:
            cnt = fd.readline()
            if not cnt:
                # no more KATs remaining
                break

            msg = fd.readline()
            md = fd.readline()

            # extract out required fields
            cnt = int([i.strip() for i in cnt.split('=')][-1])
            msg = [i.strip() for i in msg.split('=')][-1]
            md = [i.strip() for i in md.split('=')][-1]

            # convert input message to numpy ndarray of uint8_t
            msg = np.asarray([int(f'0x{msg[(i << 1): ((i+1) << 1)]}', base=16)
                              for i in range(len(msg) >> 1)], dtype=np.uint8)

            # convert output digest to numpy ndarray of uint8_t
            md = np.asarray([int(f'0x{md[(i << 1): ((i+1) << 1)]}', base=16)
                             for i in range(len(md) >> 1)], dtype=np.uint8)

            # compute Ascon HashA using my implementation
            digest = ascon.hash_a(msg)
            # check 32 -bytes element-wise
            check = (md == digest).all()

            assert check, f'[Ascon Hash KAT {cnt}] expected {md}, found {digest} !'

            # don't need this line, so discard
            fd.readline()
            # to keep track of how many KATs executed !
            count = cnt

    print(f'[test] passed {count} -many Ascon HashA KAT(s)')


if __name__ == '__main__':
    print(f'Prefer using `pytest` for selectively running test cases !')
